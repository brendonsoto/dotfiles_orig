#===== General JS =====#
snippet cl
console.log($1)
endsnippet

snippet exp
export default $1
endsnippet

snippet for
for (let ${1:i} = 0; $1 <= $2; $1++) {
	$3
}
endsnippet

snippet func
const $1 = ($2) => {
	$3
}
endsnippet

snippet if
if ($1) {
	$2
}
endsnippet

snippet imp
import $1 from '$2';
endsnippet

snippet impexp
import $1 from './$1';
export default $1;
endsnippet

snippet switch
switch ($1) {
	case $2:
		$3
		break;
	default: return ${4:state};
}
endsnippet


#===== React / Redux =====#
snippet act
const $1 = ($2) => ({
	type: actionTypes.$3,
	payload: {
		${4:$2}
	}
});
$0
endsnippet

snippet comp
class $1 extends React.Component {
	render() {
		return (

		);
	}
}
endsnippet

snippet connect
export default connect(${1:mapStateToProps}${2:, mapDispatchToProps})($3);
endsnippet

snippet react
import React from 'react';
endsnippet

snippet reducer
const $1Reducer = (state = $2, action) => {
	switch (action.type) {
		case actionTypes.$3:
			return action.payload.$4;
		default: return state;
	}
}
$0
endsnippet

snippet type
const $1 = '$1';
endsnippet
